<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sky.statistics.web.dao.IUserMapper">

	<!--插入字段-->
	<sql id="insertColumn">
		username, password, serial_number,imei,salt,state, age, address, company, phone, ip, client, last_login_time, head_url, creator, create_time, dsc
	</sql>
	<!--基本返回字段-->
	<sql id="baseColumnList">
		id, <include refid="insertColumn" />
	</sql>
	<!--条件查询-->
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<!--条件修改-->
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<!-- 为了返回list 类型而定义的returnMap -->
	<resultMap type="User" id="resultListUser">
		<id column="id" property="id" />
		<result column="username" property="userName" />
		<result column="password" property="password" />
		<result column="serial_number" property="serialNumber" />
		<result column="imei" property="IMEI" />
		<result column="salt" property="salt" />
		<result column="state" property="state" />
		<result column="age" property="age" />
		<result column="address" property="address" />
		<result column="company" property="company" />
		<result column="phone" property="phone" />
		<result column="ip" property="IP" />
		<result column="client" property="client" />
		<result column="last_login_time" property="lastLoginTime" />
		<result column="head_url" property="headURL" />
		<result column="creator" property="creator" />
		<result column="create_time" property="createTime" />
		<result column="dsc" property="dsc" />
	</resultMap>

	<!--执行增加操作的SQL语句。id和parameterType 分别与IUserOperation接口中的addUser方法的名字和 参数类型一致。以#{userName}的形式引用User参数
		的userName属性，MyBatis将使用反射读取User参数 的此属性。#{userName}中userName大小写敏感。引用其他 的age等属性与此一致。seGeneratedKeys设置
		为"true"表明要MyBatis获取由数据库自动生成的主 键；keyProperty="id"指定把获取到的主键值注入 到User的id属性 -->
	<insert id="insert" parameterType="User"
			useGeneratedKeys="true"	keyProperty="id">
		insert into tbl_user(<include refid="insertColumn" />)
		values(#{userName},#{password},#{serialNumber},#{IMEI},#{salt},#{state},#{age},#{address},#{company},#{phone},#{IP},#{client},#{lastLoginTime},#{headURL},#{creator},#{createTime},#{dsc})
	</insert>
	<insert id="insertSelective" parameterType="User"
			useGeneratedKeys="true"	keyProperty="id">
		insert into tbl_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userName != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="serialNumber != null">
				serial_number,
			</if>
			<if test="IMEI != null">
				imei,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="company != null">
				company,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="IP != null">
				ip,
			</if>
			<if test="client != null">
				client,
			</if>
			<if test="lastLoginTime != null">
				last_login_time,
			</if>
			<if test="headURL != null">
				head_url,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="dsc != null">
				dsc,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userName != null">
				#{userName},
			</if>
			<if test="password != null">
				#{password},
			</if>
			<if test="serialNumber != null">
				#{serialNumber},
			</if>
			<if test="IMEI != null">
				#{IMEI},
			</if>
			<if test="salt != null">
				#{salt},
			</if>
			<if test="state != null">
				#{state},
			</if>
			<if test="age != null">
				#{age},
			</if>
			<if test="address != null">
				#{address},
			</if>
			<if test="company != null">
				#{company},
			</if>
			<if test="phone != null">
				#{phone},
			</if>
			<if test="IP != null">
				#{IP},
			</if>
			<if test="client != null">
				#{client},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime},
			</if>
			<if test="headURL != null">
				#{headURL},
			</if>
			<if test="creator != null">
				#{creator},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="dsc != null">
				#{dsc},
			</if>
		</trim>
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="Long">
		delete from tbl_user where id=#{id}
	</delete>
	<delete id="deleteByExample" parameterType="UserExample">
		delete from tbl_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>

	<update id="updateByPrimaryKeySelective" parameterType="User" >
		update tbl_user
		<set>
			<if test="userName != null">
				username = #{userName},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="serialNumber != null">
				serial_number = #{serialNumber},
			</if>
			<if test="IMEI != null">
				imei = #{IMEI},
			</if>
			<if test="salt != null">
				salt = #{salt},
			</if>
			<if test="state != null">
				state = #{state},
			</if>
			<if test="age != null">
				age = #{age},
			</if>
			<if test="address != null">
				address = #{address},
			</if>
			<if test="company != null">
				company = #{company},
			</if>
			<if test="phone != null">
				phone = #{phone},
			</if>
			<if test="IP != null">
				ip = #{IP},
			</if>
			<if test="client != null">
				client = #{client},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime},
			</if>
			<if test="headURL != null">
				head_url = #{headURL},
			</if>
			<if test="creator != null">
				creator = #{creator},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="dsc != null">
				dsc = #{dsc},
			</if>
		</set>
		where id=#{id}
	</update>
	<update id="updateByExampleSelective" parameterType="map">
		update tbl_user
		<set>
			<if test="record.id != null">
				id = #{record.id},
			</if>
			<if test="record.userName != null">
				username = #{record.userName},
			</if>
			<if test="record.password != null">
				password = #{record.password},
			</if>
			<if test="record.serialNumber != null">
				serial_number = #{record.serialNumber},
			</if>
			<if test="record.IMEI != null">
				imei = #{record.IMEI},
			</if>
			<if test="record.salt != null">
				salt = #{record.salt},
			</if>
			<if test="record.state != null">
				state = #{record.state},
			</if>
			<if test="record.age != null">
				age = #{record.age},
			</if>
			<if test="record.address != null">
				address = #{record.address},
			</if>
			<if test="record.company != null">
				company = #{record.company},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone},
			</if>
			<if test="record.IP != null">
				ip = #{record.IP},
			</if>
			<if test="record.client != null">
				client = #{record.client},
			</if>
			<if test="record.lastLoginTime != null">
				last_login_time = #{record.lastLoginTime},
			</if>
			<if test="record.headURL != null">
				head_url = #{record.headURL},
			</if>
			<if test="record.creator != null">
				creator = #{record.creator},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime},
			</if>
			<if test="record.dsc != null">
				dsc = #{record.dsc},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tbl_user set
		username=#{record.userName},serial_number=#{record.serialNumber},imei=#{record.IMEI},salt=#{record.salt},state=#{record.state},age=#{record.age},password=#{record.password} ,address=#{record.address},company=#{record.company} ,phone=#{record.phone},ip=#{record.IP} ,client=#{record.client},last_login_time=#{record.lastLoginTime} ,head_url=#{record.headURL},creator=#{record.creator},create_time=#{record.createTime},dsc=#{record.dsc}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>

	<select id="countByExample" parameterType="UserExample" resultType="java.lang.Integer">
		select count(*) from tbl_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<select id="selectByExample" resultMap="resultListUser" parameterType="UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="baseColumnList" />
		from tbl_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<!--通过主键查询-->
	<select id="selectByPrimaryKey" parameterType="Long" resultType="User">
		select <include refid="baseColumnList" />
		from tbl_user
		where id = #{id}
	</select>
	<!--登录验证-->
	<select id="authentication" parameterType="User" resultMap="resultListUser">
		select <include refid="baseColumnList" />
		from tbl_user
		where username = #{record.userName} and password = #{record.password}
	</select>
	<!-- 分页条件查询 -->
	<select id="selectByExampleAndPage" resultMap="resultListUser" parameterType="UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="baseColumnList" />
		from tbl_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
</mapper>