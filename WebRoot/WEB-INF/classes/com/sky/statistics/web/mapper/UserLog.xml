<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sky.statistics.web.dao.IUserLogMapper">

	<!--插入字段-->
	<sql id="insertColumn">
		user_id, log_type,err_code,err_info, log_info, log_time, ip, area, method_name, model_name
	</sql>

	<!--基本返回字段-->
	<sql id="baseColumnList">
		id, <include refid="insertColumn" />
	</sql>
	<!--条件查询-->
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<!--条件修改-->
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<!-- 为了返回list 类型而定义的returnMap -->
	<!--<resultMap log_type="UserLog" id="resultListUserLog">-->
		<!--<id column="log_id" property="id" />-->
		<!--<result column="log_usn" property="logType" />-->
		<!--<result column="log_info" property="logInfo" />-->
		<!--<result column="log_time" property="logTime" />-->
		<!--<result column="log_ip" property="ip" />-->
		<!--<result column="log_area" property="area" />-->
		<!--<result column="log_methn" property="methodName" />-->
		<!--<result column="log_modn" property="modelName" />-->
		<!--<association property="user" javaType="User" >-->
			<!--<id column="u_id" property="id" />-->
			<!--<result column="u_n" property="userName" />-->
			<!--<result column="u_pw" property="password" />-->
			<!--<result column="u_sn" property="serialNumber" />-->
			<!--<result column="u_imei" property="IMEI" />-->
			<!--<result column="u_salt" property="salt" />-->
			<!--<result column="u_age" property="age" />-->
			<!--<result column="u_addr" property="address" />-->
			<!--<result column="u_comp" property="company" />-->
			<!--<result column="u_phone" property="phone" />-->
			<!--<result column="u_ip" property="ip" />-->
			<!--<result column="u_client" property="client" />-->
			<!--<result column="u_llt" property="lastLoginTime" />-->
			<!--<result column="u_hu" property="headURL" />-->
			<!--<result column="u_c" property="creator" />-->
			<!--<result column="u_ct" property="createTime" />-->
			<!--<result column="u_dsc" property="dsc" />-->
		<!--</association>-->
	<!--</resultMap>-->
	<resultMap type="UserLog" id="resultListUserLog">
		<id column="id" property="id" />
		<result column="log_type" property="logType" />
		<result column="err_code" property="errCode" />
		<result column="err_info" property="errInfo" />
		<result column="log_info" property="logInfo" />
		<result column="log_time" property="logTime" />
		<result column="ip" property="ip" />
		<result column="area" property="area" />
		<result column="method_name" property="methodName" />
		<result column="model_name" property="modelName" />
		<association property="user" javaType="User" >
			<id column="id" property="id" />
			<result column="username" property="userName" />
			<result column="password" property="password" />
			<result column="serial_number" property="serialNumber" />
			<result column="uuid" property="uuid" />
			<result column="salt" property="salt" />
			<result column="state" property="state" />
			<result column="age" property="age" />
			<result column="address" property="address" />
			<result column="company" property="company" />
			<result column="phone" property="phone" />
			<result column="email" property="email" />
			<result column="ip" property="ip" />
			<result column="client" property="client" />
			<result column="last_login_time" property="lastLoginTime" />
			<result column="head_url" property="headURL" />
			<result column="creator" property="creator" />
			<result column="create_time" property="createTime" />
			<result column="dsc" property="dsc" />
		</association>
	</resultMap>

	<insert id="insert" parameterType="UserLog"
			useGeneratedKeys="true"	keyProperty="id">
		insert into tbl_user_log(<include refid="insertColumn" />)
		values(#{user.id},#{logType},#{errCode},#{errInfo},#{logInfo},#{logTime},#{ip},#{area},#{methodName},#{modelName})
	</insert>
	<insert id="insertSelective" parameterType="UserLog"
			useGeneratedKeys="true"	keyProperty="id">
		insert into tbl_user_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="user != null">
				user_id,
			</if>
			<if test="logType != null">
				log_type,
			</if>
			<if test="errCode != null">
				err_code,
			</if>
			<if test="errInfo != null">
				err_info,
			</if>
			<if test="logInfo != null">
				log_info,
			</if>
			<if test="logTime != null">
				log_time,
			</if>
			<if test="ip != null">
				ip,
			</if>
			<if test="area != null">
				area,
			</if>
			<if test="methodName != null">
				method_name,
			</if>
			<if test="modelName != null">
				model_name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="user != null">
				#{user.id},
			</if>
			<if test="logType != null">
				#{logType},
			</if>
			<if test="errCode != null">
				#{errCode},
			</if>
			<if test="errInfo != null">
				#{errInfo},
			</if>
			<if test="logInfo != null">
				#{logInfo},
			</if>
			<if test="logTime != null">
				#{logTime},
			</if>
			<if test="ip != null">
				#{ip},
			</if>
			<if test="area != null">
				#{area},
			</if>
			<if test="methodName != null">
				#{methodName},
			</if>
			<if test="modelName != null">
				#{modelName},
			</if>
		</trim>
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="Long">
		delete from tbl_user_log where id=#{id}
	</delete>
	<delete id="deleteByUserID" parameterType="User">
		delete from tbl_user_log where user_id=#{id}
	</delete>
	<delete id="deleteByExample" parameterType="UserLogExample">
		delete from tbl_user_log
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>

	<update id="updateByPrimaryKeySelective" parameterType="UserLog" >
		update tbl_user_log
		<set>
			<if test="user.id != null">
				user_id = #{user.id},
			</if>
			<if test="logType != null">
				log_type = #{logType},
			</if>
			<if test="errCode != null">
				err_code = #{errCode},
			</if>
			<if test="errInfo != null">
				err_info = #{errInfo},
			</if>
			<if test="logType != null">
				log_type = #{logType},
			</if>
			<if test="logInfo != null">
				log_info = #{logInfo},
			</if>
			<if test="logtime != null">
				log_time = #{logtime},
			</if>
			<if test="ip != null">
				ip = #{ip},
			</if>
			<if test="area != null">
				area = #{area},
			</if>
			<if test="methodName != null">
				method_name = #{methodName},
			</if>
			<if test="modelName != null">
				model_name = #{modelName},
			</if>
		</set>
		where id=#{id}
	</update>
	<update id="updateByExampleSelective" parameterType="map">
		update tbl_user_log
		<set>
			<if test="record.id != null">
				id = #{record.id},
			</if>
			<if test="record.user.id != null">
				user_id = #{record.user.id},
			</if>
			<if test="record.logType != null">
				log_type = #{record.logType},
			</if>
			<if test="record.errCode != null">
				err_code = #{record.errCode},
			</if>
			<if test="record.errInfo != null">
				err_info = #{record.errInfo},
			</if>
			<if test="record.logInfo != null">
				log_info = #{record.logInfo},
			</if>
			<if test="record.logTime != null">
				log_time = #{record.logTime},
			</if>
			<if test="record.ip != null">
				ip = #{record.ip},
			</if>
			<if test="record.area != null">
				area = #{record.area},
			</if>
			<if test="record.methodName != null">
				method_name = #{record.methodName},
			</if>
			<if test="record.modelName != null">
				model_name = #{record.modelName},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tbl_user_log set
		user_id=#{user.id},log_type=#{logType},err_code=#{errCode},err_info=#{errInfo},log_info=#{logInfo},log_time=#{logTime},ip=#{ip},area=#{area},method_name=#{methodName} ,model_name=#{modelName}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>


	<select id="countByExample" parameterType="UserLogExample" resultType="java.lang.Integer">
		select count(*) from tbl_user_log
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<select id="selectByExample" resultMap="resultListUserLog" parameterType="UserLogExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="baseColumnList" />
		from tbl_user_log
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<!-- 通过用户ID查找 -->
	<!--重点：当使用bean作为返回类型时，parameterType必须为该bean类型，并且传入参数名应与bean关联字段一致-->
	<select id="selectUserLog" parameterType="User" resultMap="resultListUserLog">
		select usl.*,us.*
-- 		usl.id log_id, usl.log_type log_usn,usl.log_info log_info, usl.log_time log_time, usl.ip log_ip, usl.method_name log_methn, usl.model_name log_modn,
-- 		us.id u_id, us.username u_n, us.password u_pw,us.serial_number u_sn, us.imei u_imei, us.salt u_salt,us.age u_age, us.address u_addr,us.company u_comp,us.phone u_phone,us.ip u_ip,us.client u_client,us.last_login_time u_llt,us.head_url u_hu,us.creator u_c,us.create_time u_ct,us.dsc u_dsc
		from tbl_user_log usl, tbl_user us
		where usl.user_id = us.id and usl.user_id=${id}
	</select>
	<!--通过主键查询-->
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="UserLog">
		select <include refid="baseColumnList" />
		from tbl_user_log
		where id = #{id}
	</select>
	<!-- 分页条件查询 -->
	<select id="selectByExampleAndPage" resultMap="resultListUserLog" parameterType="UserLogExample">
		select
		<if test="distinct">
			distinct
		</if>
		usl.*,us.*
		from tbl_user_log usl, tbl_user us
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>






</mapper>